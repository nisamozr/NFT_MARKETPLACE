[{"/home/nisamudheen/Desktop/sps/NFT_MARKETPLACE/client/src/index.js":"1","/home/nisamudheen/Desktop/sps/NFT_MARKETPLACE/client/src/reportWebVitals.js":"2","/home/nisamudheen/Desktop/sps/NFT_MARKETPLACE/client/src/App.js":"3","/home/nisamudheen/Desktop/sps/NFT_MARKETPLACE/client/src/config.js":"4","/home/nisamudheen/Desktop/sps/NFT_MARKETPLACE/client/src/context/web3.js":"5","/home/nisamudheen/Desktop/sps/NFT_MARKETPLACE/client/src/pages/Explore.jsx":"6","/home/nisamudheen/Desktop/sps/NFT_MARKETPLACE/client/src/pages/Collection.jsx":"7","/home/nisamudheen/Desktop/sps/NFT_MARKETPLACE/client/src/pages/Create.jsx":"8","/home/nisamudheen/Desktop/sps/NFT_MARKETPLACE/client/src/pages/Home.jsx":"9","/home/nisamudheen/Desktop/sps/NFT_MARKETPLACE/client/src/pages/Nft.jsx":"10","/home/nisamudheen/Desktop/sps/NFT_MARKETPLACE/client/src/pages/Error.jsx":"11","/home/nisamudheen/Desktop/sps/NFT_MARKETPLACE/client/src/components/Navbar.jsx":"12","/home/nisamudheen/Desktop/sps/NFT_MARKETPLACE/client/src/components/Card.jsx":"13","/home/nisamudheen/Desktop/sps/NFT_MARKETPLACE/client/src/components/CardSales.jsx":"14"},{"size":479,"mtime":1641830776150,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1641830776150,"results":"17","hashOfConfig":"16"},{"size":3202,"mtime":1643018234888,"results":"18","hashOfConfig":"16"},{"size":154,"mtime":1643010495742,"results":"19","hashOfConfig":"16"},{"size":82,"mtime":1642610132884,"results":"20","hashOfConfig":"16"},{"size":2018,"mtime":1643022692620,"results":"21","hashOfConfig":"16"},{"size":549,"mtime":1642141322683,"results":"22","hashOfConfig":"16"},{"size":4819,"mtime":1643036813715,"results":"23","hashOfConfig":"16"},{"size":1296,"mtime":1642999561302,"results":"24","hashOfConfig":"16"},{"size":1498,"mtime":1642152217494,"results":"25","hashOfConfig":"16"},{"size":404,"mtime":1642156074432,"results":"26","hashOfConfig":"16"},{"size":3201,"mtime":1642999545070,"results":"27","hashOfConfig":"16"},{"size":754,"mtime":1643022715464,"results":"28","hashOfConfig":"16"},{"size":672,"mtime":1642140387332,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"nbfa9d",{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/nisamudheen/Desktop/sps/NFT_MARKETPLACE/client/src/index.js",[],"/home/nisamudheen/Desktop/sps/NFT_MARKETPLACE/client/src/reportWebVitals.js",[],"/home/nisamudheen/Desktop/sps/NFT_MARKETPLACE/client/src/App.js",["61","62","63","64","65"],"/home/nisamudheen/Desktop/sps/NFT_MARKETPLACE/client/src/config.js",[],"/home/nisamudheen/Desktop/sps/NFT_MARKETPLACE/client/src/context/web3.js",[],"/home/nisamudheen/Desktop/sps/NFT_MARKETPLACE/client/src/pages/Explore.jsx",["66","67","68"],"import React, {useState, useEffect,useContext} from 'react'\n// import { Link } from 'react-router-dom'\nimport Card from '../components/Card'\nimport axios from 'axios'\nimport {ethers} from 'ethers'\n// import Navbar from '../components/Navbar'\nimport \"../style/Card.css\"\nimport { web3Provider } from '../context/web3'\nimport { nftmarketplaceAddress } from '../config'\n\nfunction Explore() {\n\n    const [nfts, setNfts] = useState([])\n    const [loading, setLoding] = useState(\"\")\n  \n    const {connection, signer,nftMarketplaceContract,nftContract} = useContext(web3Provider)\n  \n    useEffect(() => {\n    loadNFT()\n      \n      console.log(connection, signer,nftContract,nftMarketplaceContract)\n    });\n    async function loadNFT(){\n   \n      const data = await nftMarketplaceContract.fetchMarketItems()\n  \n      const items = await Promise.all(data.map(async i => {\n        // const tokenUri = await nftContract.tokenURI(i.tokenId)\n        // const meta = await axios.get(tokenUri)\n        let price = ethers.utils.formatUnits(i.price.toString(), 'ether')\n        console.log(price)\n        let item = {\n          price,\n          tokenId: i.tokenId.toNumber(),\n          seller: i.seller,\n          owner: i.owner,\n          // image: meta.data.image,\n          // name: meta.data.name,\n          // description: meta.data.description,\n        }\n        return item\n      } )\n      )\n      setNfts(items)\n      setLoding('loaded') \n    }\n    console.log(nfts);\n    \n    return (\n        <div className=\"news\">\n         \n            <div className=\"collotion\">\n                <div className=\"container\">\n                    <h3>NFT's</h3>\n                <div className=\"row\">\n                  {\n                    nfts.map((nfts,i)=>(\n                      <Card key={i} data={nfts.price}/>\n                    ))\n                  }\n                    \n                  \n\n                </div>\n                </div>\n                \n            </div>\n            \n        </div>\n    )\n}\n\nexport default Explore\n",["69","70"],"/home/nisamudheen/Desktop/sps/NFT_MARKETPLACE/client/src/pages/Collection.jsx",[],"/home/nisamudheen/Desktop/sps/NFT_MARKETPLACE/client/src/pages/Create.jsx",["71","72","73","74","75","76","77","78","79"],"import React, { useRef, useState, useEffect, useContext } from 'react'\nimport {useRoutes} from \"react-router-dom\"\nimport { ethers } from 'ethers'\nimport {create as ipfsHttpClient} from \"ipfs-http-client\"\nimport { web3Provider } from '../context/web3'\nimport NFT from \"../contracts/NFT.json\"\nimport Market from \"../contracts/NFTmarketplace.json\"\n\n\n\nimport '../style/Create.css'\n\nconst client = ipfsHttpClient(\"https://ipfs.infura.io:5001/api/v0\")\n\nfunction Create() {\n  // const router = useRoutes()\n  const {connection, signer ,nftMarketplaceContract,nftContract} = useContext(web3Provider)\n  const fileRef = useRef(null)\n  const [image, setImage] = useState()\n  const [selecfile, setselecfile] = useState(null)\n  // uploding\n  const [fileUrl, setFileUrl] = useState(null)\n  const [formInput, updateFormInput] = useState({ price: '', name: '', description: '' })\n\n  const ButtonClic = () => {\n    fileRef.current.click()\n  }\n\n  const handleChange = async (e) => {\n    const { files } = e.target\n    if (e.target.files[0]) {\n      setselecfile(e.target.files[0])\n      const reader = new FileReader()\n      reader.addEventListener('load', () => {\n        setImage(reader.result)\n      })\n      reader.readAsDataURL(e.target.files[0])\n\n      const filed = e.target.files[0]\n    try {\n      const added = await client.add(\n        filed\n        // {\n        //   progress: (prog) => console.log(`received: ${prog}`)\n        // }\n      )\n      console.log(added);\n      const url = `https://ipfs.infura.io/ipfs/${added.path}`\n      setFileUrl(url)\n    } catch (error) {\n      console.log('Error uploading file: ', error)\n    }  \n\n    }\n  }\n\nconst createMarketitem = async ()=>{\n  const { name, description, price } = formInput\n\n    if (!name || !description || !price || !fileUrl) return\n    /* first, upload to IPFS */\n    const data = JSON.stringify({\n      name, description, image: fileUrl\n    })\n  \n    try {\n      // const added = await client.add(data)\n      const url = fileUrl\n      console.log(\"yrr\",url)\n      /* after file is uploaded to IPFS, pass the URL to save it on Polygon */\n      createSale(url)\n    } catch (error) {\n      console.log('Error uploading file: ', error)\n    }  \n}\n\nasync function createSale(url) {\n  // const web3Modal = new Web3Modal()\n  // const connection = await web3Modal.connect()\n  // const providers = connection   \n  // const signers = signer\n\n  /* next, create the item */\n  let contract = nftContract\n  let transaction = await contract.createToken(url)\n  let tx = await transaction.wait()\n  // console.log(tx);\n  let event = tx.events[0]\n  let value = event.args[2]\n  let tokenId = value.toNumber()\n  const price = ethers.utils.parseUnits(formInput.price, 'ether')\n\n  /* then list the item for sale on the marketplace */\n  contract = nftMarketplaceContract;\n  let listingPrice = await contract.getListingPrice()\n  listingPrice = listingPrice.toString()\n\n  transaction = await contract.createMarketplace(nftContract.address, tokenId, price, { value: listingPrice })\n  await transaction.wait()\n  // router.push('/')\n}\n\n  return (\n    <div className=\"new\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <h2>Create NFT</h2>\n          </div>\n        </div>\n        <hr />\n        <div className=\"containers\">\n          <div>\n            <h4>Upload Artwork</h4>\n            <div className=\"artbox\">\n              {image ? (\n                <img src={image} alt=\"\" />\n              ) : (\n                <button onClick={ButtonClic}>Add Artwork</button>\n              )}\n\n              <input\n                ref={fileRef}\n                onChange={handleChange}\n                multiple={false}\n                hidden\n                type=\"file\"\n                name=\"\"\n                id=\"\"\n              />\n            </div>\n          </div>\n          <div className=\"disc\">\n            <h4>Artwork Details</h4>\n            <div>\n              <input type=\"text\" placeholder=\"Artwork Name\" name=\"\" id=\"\" onChange={e => updateFormInput({ ...formInput, name: e.target.value })} />\n            </div>\n            <div>\n              <textarea\n                name=\"\"\n                id=\"\"\n                placeholder=\"Artwork Description\"\n                cols=\"\"\n                onChange={e => updateFormInput({ ...formInput, description: e.target.value })}\n                rows=\"4\"\n              ></textarea>\n            </div>\n            <div>\n              <input type=\"number\" placeholder=\"Price\" name=\"\" id=\"\" onChange={e => updateFormInput({ ...formInput, price: e.target.value })} />\n            </div>\n          </div>\n          <div>\n            <button className=\"mintbuttun\" onClick={createMarketitem}>Create</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Create\n","/home/nisamudheen/Desktop/sps/NFT_MARKETPLACE/client/src/pages/Home.jsx",["80","81","82"],"/home/nisamudheen/Desktop/sps/NFT_MARKETPLACE/client/src/pages/Nft.jsx",[],"/home/nisamudheen/Desktop/sps/NFT_MARKETPLACE/client/src/pages/Error.jsx",[],"/home/nisamudheen/Desktop/sps/NFT_MARKETPLACE/client/src/components/Navbar.jsx",["83"],"/home/nisamudheen/Desktop/sps/NFT_MARKETPLACE/client/src/components/Card.jsx",[],"/home/nisamudheen/Desktop/sps/NFT_MARKETPLACE/client/src/components/CardSales.jsx",[],{"ruleId":"84","severity":1,"message":"85","line":2,"column":17,"nodeType":"86","messageId":"87","endLine":2,"endColumn":26},{"ruleId":"84","severity":1,"message":"88","line":9,"column":50,"nodeType":"86","messageId":"87","endLine":9,"endColumn":54},{"ruleId":"84","severity":1,"message":"89","line":23,"column":10,"nodeType":"86","messageId":"87","endLine":23,"endColumn":22},{"ruleId":"84","severity":1,"message":"90","line":25,"column":12,"nodeType":"86","messageId":"87","endLine":25,"endColumn":19},{"ruleId":"84","severity":1,"message":"91","line":25,"column":21,"nodeType":"86","messageId":"87","endLine":25,"endColumn":31},{"ruleId":"84","severity":1,"message":"92","line":4,"column":8,"nodeType":"86","messageId":"87","endLine":4,"endColumn":13},{"ruleId":"84","severity":1,"message":"93","line":9,"column":10,"nodeType":"86","messageId":"87","endLine":9,"endColumn":31},{"ruleId":"84","severity":1,"message":"94","line":14,"column":12,"nodeType":"86","messageId":"87","endLine":14,"endColumn":19},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"84","severity":1,"message":"85","line":1,"column":35,"nodeType":"86","messageId":"87","endLine":1,"endColumn":44},{"ruleId":"84","severity":1,"message":"99","line":2,"column":9,"nodeType":"86","messageId":"87","endLine":2,"endColumn":18},{"ruleId":"84","severity":1,"message":"100","line":6,"column":8,"nodeType":"86","messageId":"87","endLine":6,"endColumn":11},{"ruleId":"84","severity":1,"message":"101","line":7,"column":8,"nodeType":"86","messageId":"87","endLine":7,"endColumn":14},{"ruleId":"84","severity":1,"message":"102","line":17,"column":10,"nodeType":"86","messageId":"87","endLine":17,"endColumn":20},{"ruleId":"84","severity":1,"message":"103","line":17,"column":22,"nodeType":"86","messageId":"87","endLine":17,"endColumn":28},{"ruleId":"84","severity":1,"message":"104","line":20,"column":10,"nodeType":"86","messageId":"87","endLine":20,"endColumn":19},{"ruleId":"84","severity":1,"message":"105","line":30,"column":13,"nodeType":"86","messageId":"87","endLine":30,"endColumn":18},{"ruleId":"84","severity":1,"message":"106","line":62,"column":11,"nodeType":"86","messageId":"87","endLine":62,"endColumn":15},{"ruleId":"84","severity":1,"message":"107","line":1,"column":17,"nodeType":"86","messageId":"87","endLine":1,"endColumn":25},{"ruleId":"84","severity":1,"message":"108","line":1,"column":27,"nodeType":"86","messageId":"87","endLine":1,"endColumn":37},{"ruleId":"84","severity":1,"message":"85","line":1,"column":39,"nodeType":"86","messageId":"87","endLine":1,"endColumn":48},{"ruleId":"109","severity":1,"message":"110","line":23,"column":31,"nodeType":"111","messageId":"112","endLine":23,"endColumn":92},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'errorMessage' is assigned a value but never used.","'Balance' is assigned a value but never used.","'setBalance' is assigned a value but never used.","'axios' is defined but never used.","'nftmarketplaceAddress' is defined but never used.","'loading' is assigned a value but never used.","no-native-reassign",["113"],"no-negated-in-lhs",["114"],"'useRoutes' is defined but never used.","'NFT' is defined but never used.","'Market' is defined but never used.","'connection' is assigned a value but never used.","'signer' is assigned a value but never used.","'selecfile' is assigned a value but never used.","'files' is assigned a value but never used.","'data' is assigned a value but never used.","'useState' is defined but never used.","'useContext' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","no-global-assign","no-unsafe-negation"]