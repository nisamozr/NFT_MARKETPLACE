[{"/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/index.js":"1","/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/App.js":"2","/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/reportWebVitals.js":"3","/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/config.js":"4","/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/context/web3.js":"5","/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/pages/Home.jsx":"6","/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/pages/Explore.jsx":"7","/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/pages/Collection.jsx":"8","/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/pages/Error.jsx":"9","/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/pages/Create.jsx":"10","/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/pages/Nft.jsx":"11","/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/components/Navbar.jsx":"12","/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/components/CardSales.jsx":"13","/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/components/Card.jsx":"14","/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/pages/Sell.jsx":"15"},{"size":479,"mtime":1643303229717,"results":"16","hashOfConfig":"17"},{"size":3515,"mtime":1643869041031,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1643303229717,"results":"19","hashOfConfig":"17"},{"size":280,"mtime":1643880199597,"results":"20","hashOfConfig":"17"},{"size":82,"mtime":1643303229697,"results":"21","hashOfConfig":"17"},{"size":1247,"mtime":1643374965183,"results":"22","hashOfConfig":"17"},{"size":3061,"mtime":1643374932006,"results":"23","hashOfConfig":"17"},{"size":2156,"mtime":1643444245879,"results":"24","hashOfConfig":"17"},{"size":404,"mtime":1643303229717,"results":"25","hashOfConfig":"17"},{"size":4506,"mtime":1643694617136,"results":"26","hashOfConfig":"17"},{"size":4633,"mtime":1643869082339,"results":"27","hashOfConfig":"17"},{"size":3891,"mtime":1643374934182,"results":"28","hashOfConfig":"17"},{"size":526,"mtime":1643544996316,"results":"29","hashOfConfig":"17"},{"size":843,"mtime":1643545000712,"results":"30","hashOfConfig":"17"},{"size":5886,"mtime":1643880368891,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1lmqe2g",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/index.js",[],["68","69"],"/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/App.js",["70","71","72"],"/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/reportWebVitals.js",[],"/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/config.js",[],"/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/context/web3.js",[],"/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/pages/Home.jsx",["73","74","75"],"import React, { useState, useContext, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport '../style/Home.css'\n\n\nfunction Home() {\n\n  return (\n    <div className=\"container\">\n     \n        <div className=\"\">\n        <div className=\"row feeld\">\n          <div className=\"col-md-6 co-sm-12\">\n            <div className=\"feeld-left\">\n              <div className=\"black\">\n                <div className=\"blankPhoto\">\n                  <img src=\"./w.jpg\" alt=\"\" />\n                </div>\n              </div>\n            </div>\n          </div>\n          <dic className=\"col-md-6\">\n            <div className=\"feeld-right\">\n              <div className=\"f\">\n                <div className=\"dis\">Mint your own NFT's on one click </div>\n                <div className=\"but\">\n                  <Link to=\"/create\">\n                    {' '}\n                    <button className=\"btn1 e\">Create</button>{' '}\n                  </Link>\n                  <Link to=\"/explore\">\n                    {' '}\n                    <button className=\"btn2 e\">Explore</button>\n                  </Link>\n                </div>\n              </div>\n            </div>\n          </dic>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Home\n","/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/pages/Explore.jsx",["76","77","78","79"],"import React, { useState, useEffect, useContext } from 'react'\nimport Card from '../components/Card'\nimport axios from 'axios'\nimport { ethers } from 'ethers'\nimport '../style/Card.css'\nimport { web3Provider } from '../context/web3'\n\nfunction Explore() {\n  const [nfts, setNfts] = useState([])\n  const [loading, setLoding] = useState('')\n  const {\n    connection,\n    signer,\n    nftMarketplaceContract,\n    nftContract,\n  } = useContext(web3Provider)\n\n  const [connect, setcontect] = useState(null)\n  useEffect(() => {\n\n    loadNFT()\n\n\n  }, [connection])\n\n\n  async function loadNFT() {\n    // let count =  await nftMarketplaceContract.marketItemCont()\n    // console.log(count.toNumber(),\"ggggggggggggggggggdddd\")\n\n    //   for(let j=1; j<=count ; j++){\n    //     const i = await nftMarketplaceContract.idMarketItem(j)\n    //     console.log(i,\"gggggggggggggggggg\")\n    //      let tockenid = i.tokenId\n    //       let id = tockenid.toNumber()\n\n    //       const tokenUri = await nftContract.tokenURI(id)\n    //       const meta = await axios.get(tokenUri)\n    //       let price = ethers.utils.formatUnits(i.price.toString(), 'ether')\n\n    //       let item = {\n    //         price,\n    //         tokenId: i.tokenId.toNumber(),\n    //         seller: i.seller,\n    //         owner: i.owner,\n    //         image: meta.data.image,\n    //         name: meta.data.name,\n    //         description: meta.data.description,\n    //       }\n    //       // return item\n    //       setNfts(nfts.push(item))\n    //       console.log(\"jj\")\n\n    //   console.log(nfts,\"dd\")\n\n\n    //  }\n\n\n\n\n    const data = await nftMarketplaceContract.fetchMarketItems()\n    const items = await Promise.all(\n      data.map(async (i) => {\n        let tockenid = i.tokenId\n        let id = tockenid.toNumber()\n        const tokenUri = await nftContract.tokenURI(id)\n        const meta = await axios.get(tokenUri)\n        let price = ethers.utils.formatUnits(i.price.toString(), 'ether')\n        let item = {\n          price,\n          tokenId: i.tokenId.toNumber(),\n          seller: i.seller,\n          owner: i.owner,\n          image: meta.data.image,\n          name: meta.data.name,\n          description: meta.data.description,\n        }\n\n        return item\n      }),\n    )\n    setNfts(items)\n    setLoding(\"loaded\")\n    console(\"gfs\", items)\n\n  }\n  if (loading === \"loaded\" && !nfts.length) return (<h1> noitem in market</h1>)\n\n  return (\n    <div className=\"news\">\n      <div className=\"collotion\">\n        <div className=\"container\">\n          <h3>NFT's</h3>\n          <div className=\"row\">\n            {\n              (connection == null) ? <div className='connectWalletWarring'>Please connect with wallet</div> : nfts.map((nfts, i) => (\n\n                <Card\n                  key={i}\n                  price={nfts.price}\n                  name={nfts.name}\n                  tokenId={nfts.tokenId}\n                  image={nfts.image}\n                />\n              ))\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Explore\n","/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/pages/Collection.jsx",["80","81","82","83","84","85","86"],"import React, { useState, useEffect, useContext } from 'react'\nimport Card from '../components/CardSales'\nimport axios from 'axios'\nimport { ethers } from 'ethers'\nimport { web3Provider } from '../context/web3'\nimport { nftaddress } from '../config'\nimport { useNavigate } from \"react-router-dom\"\n\n\nfunction Collection() {\n  const route = useNavigate();\n  const [sellPrice, setSells] = useState(null)\n  const [nfts, setNfts] = useState([])\n  const {\n    connection,\n    signer,\n    nftMarketplaceContract,\n    nftContract,\n  } = useContext(web3Provider)\n\n  useEffect(() => {\n    loadNFT()\n\n  }, [])\n\n  async function loadNFT() {\n    const data = await nftMarketplaceContract.fetchMyNFTs()\n    const items = await Promise.all(\n      data.map(async (i) => {\n        let tockenid = i.tokenId\n        let id = tockenid.toNumber()\n        const tokenUri = await nftContract.tokenURI(id)\n        const meta = await axios.get(tokenUri)\n        let price = ethers.utils.formatUnits(i.price.toString(), 'ether')\n        let item = {\n          price,\n          marketId: i.itemId.toNumber(),\n          tokenId: i.tokenId.toNumber(),\n          seller: i.seller,\n          owner: i.owner,\n          image: meta.data.image,\n          name: meta.data.name,\n          description: meta.data.description,\n        }\n        return item\n      }),\n    )\n    setNfts(items)\n  }\n\n\n  return (\n    <div className=\"news\">\n      <div className=\"collotion\">\n        <div className=\"container\">\n          <h3>My NFT Collection</h3>\n          <div className=\"row\">\n            {\n              (connection == null) ? <div className='connectWalletWarring'>Please connect with wallet</div> : (nfts.length == 0) ? <div className='connectWalletWarring'>You not owned any NFT's</div> : nfts.map((nfts, i) => (\n                <Card\n                  key={i}\n                  price={nfts.price}\n                  name={nfts.name}\n                  tokenId={nfts.tokenId}\n                  image={nfts.image}\n                  marketId={nfts.marketId}\n                />\n              ))\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Collection\n","/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/pages/Error.jsx",[],"/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/pages/Create.jsx",["87","88","89","90","91"],"/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/pages/Nft.jsx",["92","93","94"],"/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/components/Navbar.jsx",["95"],"import React, { useState, useContext } from 'react'\nimport \"../style/Navbar.css\"\nimport { Link, NavLink } from \"react-router-dom\"\nimport { web3Provider } from '../context/web3'\n\nfunction Navbar({ connet, account }) {\n\n    const {\n        connection,\n        Balance\n    } = useContext(web3Provider)\n\n\n    const [click, setclick] = useState(false)\n    const [clickdropdown, setclickdropdawn] = useState(false)\n    function handleClick() {\n        setclick(!click)\n    }\n    const dropdown = () => {\n        connet()\n        setclickdropdawn(!clickdropdown)\n\n    }\n\n    return (\n        <div className=\"bo\">\n\n            <div className=\"nav\">\n\n\n                <div className=\"Navbar\">\n                    <div className=\"log\">\n                        <img src=\"./NFT_Icon.png\" alt=\"\" />\n                    </div>\n                    <div className=\"\" className={click ? \"active navbarDetails\" : \"navbarDetails \"}>\n                        {/* <div className=\"serch\">\n                    <div className=\"inputSertch\">\n                        <input type=\"text\" name=\"\" placeholder=\"Search\" id=\"\" />\n                    </div>\n                    <div className=\"serchButton\">\n                    <i className=\"fas fa-search\"></i>\n                    </div>\n                </div> */}\n                        <ul className=\"link\">\n                            <li> <NavLink to=\"/\" className={({ isActive }) => (isActive ? 'active' : 'link')} activeStyle={{ color: 'red' }}>Home</NavLink></li>\n                            <li><NavLink to=\"/explore\" className={({ isActive }) => (isActive ? 'active' : 'link')}>Explore </NavLink></li>\n                            <li><NavLink to=\"/mycollection\" className={({ isActive }) => (isActive ? 'active' : 'link')}>My Collection </NavLink></li>\n\n                        </ul>\n                        <Link to=\"/create\" className=\"btn1\">Create</Link>\n\n\n                        <div class=\"dropdown\">\n                            {/* <button onclick=\"myFunction()\" class=\"dropbtn\">Dropdown</button> */}\n                            <button className=\"btn2 connect\" onClick={(connection == null) ? connet : dropdown} >{account ? account : \"Connect Wallet\"}</button>\n                            <div id=\"myDropdown\" class={clickdropdown ? \"dropdown-content show\" : \"dropdown-content \"}>\n                                <p>ETH : {Balance}</p>\n                                {/* <button>Disconnect</button> */}\n\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"menu\">\n\n                        <button className=\"btn2 connect ss\" onClick={connet}>{account ? account : \"Connect Wallet\"}>Connect Wallet</button>\n                        <i onClick={handleClick} class={click ? \"fas fa-times\" : \"fas fa-bars\"}></i>\n                    </div>\n\n                </div>\n            </div>\n            <div className={click ? \"side active\" : \"hide\"}>\n                <div className=\"menuside\">\n                    <ul className=\"linkside\">\n                        <li onClick={handleClick}> <NavLink to=\"/\" className={({ isActive }) => (isActive ? 'active' : 'link')} activeStyle={{ color: 'red' }}>Home</NavLink></li>\n                        <li onClick={handleClick}><NavLink to=\"/explore\" className={({ isActive }) => (isActive ? 'active' : 'link')}>Explore </NavLink></li>\n                        <li onClick={handleClick}><NavLink to=\"/mycollection\" className={({ isActive }) => (isActive ? 'active' : 'link')}>My Collection </NavLink></li>\n                        <li onClick={handleClick}> <Link to=\"/mint\" className=\"btn1\">Create</Link></li>\n                        {/* <li onClick={handleClick}> <button className=\"btn2 connect\">Connect Wallet</button></li> */}\n\n                    </ul>\n\n\n\n\n                </div>\n\n            </div>\n\n\n        </div>\n    )\n}\n\nexport default Navbar\n","/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/components/CardSales.jsx",["96"],"import React ,{useState} from 'react'\nimport {Link} from \"react-router-dom\"\nimport \"../style/Card.css\"\n\nfunction Card({image,tokenId,name}) {\n    \n  \n    return (\n        <div className=\" col-md-12 col-lg-4  \">\n            <div className=\"card\">\n            <Link to={`/view/my/${tokenId}` }> \n            <div className=\"card-innerbox\">\n                <img src={image} alt=\"\" />\n                <h3>{name} #{tokenId}</h3>\n            </div>\n            </Link>\n            </div>\n        </div>\n    )\n}\n\nexport default Card\n","/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/components/Card.jsx",[],"/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/pages/Sell.jsx",["97","98"],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":2,"column":17,"nodeType":"105","messageId":"106","endLine":2,"endColumn":26},{"ruleId":"103","severity":1,"message":"107","line":9,"column":50,"nodeType":"105","messageId":"106","endLine":9,"endColumn":54},{"ruleId":"103","severity":1,"message":"108","line":23,"column":10,"nodeType":"105","messageId":"106","endLine":23,"endColumn":22},{"ruleId":"103","severity":1,"message":"109","line":1,"column":17,"nodeType":"105","messageId":"106","endLine":1,"endColumn":25},{"ruleId":"103","severity":1,"message":"110","line":1,"column":27,"nodeType":"105","messageId":"106","endLine":1,"endColumn":37},{"ruleId":"103","severity":1,"message":"104","line":1,"column":39,"nodeType":"105","messageId":"106","endLine":1,"endColumn":48},{"ruleId":"103","severity":1,"message":"111","line":13,"column":5,"nodeType":"105","messageId":"106","endLine":13,"endColumn":11},{"ruleId":"103","severity":1,"message":"112","line":18,"column":10,"nodeType":"105","messageId":"106","endLine":18,"endColumn":17},{"ruleId":"103","severity":1,"message":"113","line":18,"column":19,"nodeType":"105","messageId":"106","endLine":18,"endColumn":29},{"ruleId":"114","severity":1,"message":"115","line":24,"column":6,"nodeType":"116","endLine":24,"endColumn":18,"suggestions":"117"},{"ruleId":"103","severity":1,"message":"118","line":6,"column":10,"nodeType":"105","messageId":"106","endLine":6,"endColumn":20},{"ruleId":"103","severity":1,"message":"119","line":11,"column":9,"nodeType":"105","messageId":"106","endLine":11,"endColumn":14},{"ruleId":"103","severity":1,"message":"120","line":12,"column":10,"nodeType":"105","messageId":"106","endLine":12,"endColumn":19},{"ruleId":"103","severity":1,"message":"121","line":12,"column":21,"nodeType":"105","messageId":"106","endLine":12,"endColumn":29},{"ruleId":"103","severity":1,"message":"111","line":16,"column":5,"nodeType":"105","messageId":"106","endLine":16,"endColumn":11},{"ruleId":"114","severity":1,"message":"115","line":24,"column":6,"nodeType":"116","endLine":24,"endColumn":8,"suggestions":"122"},{"ruleId":"123","severity":1,"message":"124","line":59,"column":124,"nodeType":"125","messageId":"126","endLine":59,"endColumn":126},{"ruleId":"103","severity":1,"message":"104","line":1,"column":35,"nodeType":"105","messageId":"106","endLine":1,"endColumn":44},{"ruleId":"103","severity":1,"message":"127","line":25,"column":10,"nodeType":"105","messageId":"106","endLine":25,"endColumn":20},{"ruleId":"103","severity":1,"message":"111","line":25,"column":22,"nodeType":"105","messageId":"106","endLine":25,"endColumn":28},{"ruleId":"103","severity":1,"message":"128","line":28,"column":10,"nodeType":"105","messageId":"106","endLine":28,"endColumn":19},{"ruleId":"103","severity":1,"message":"129","line":37,"column":13,"nodeType":"105","messageId":"106","endLine":37,"endColumn":18},{"ruleId":"103","severity":1,"message":"130","line":87,"column":18,"nodeType":"105","messageId":"106","endLine":87,"endColumn":26},{"ruleId":"103","severity":1,"message":"131","line":90,"column":9,"nodeType":"105","messageId":"106","endLine":90,"endColumn":25},{"ruleId":"123","severity":1,"message":"124","line":127,"column":23,"nodeType":"125","messageId":"126","endLine":127,"endColumn":25},{"ruleId":"132","severity":1,"message":"133","line":35,"column":39,"nodeType":"134","messageId":"135","endLine":35,"endColumn":100},{"ruleId":"103","severity":1,"message":"109","line":1,"column":16,"nodeType":"105","messageId":"106","endLine":1,"endColumn":24},{"ruleId":"103","severity":1,"message":"120","line":59,"column":10,"nodeType":"105","messageId":"106","endLine":59,"endColumn":19},{"ruleId":"103","severity":1,"message":"136","line":81,"column":5,"nodeType":"105","messageId":"106","endLine":81,"endColumn":17},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'errorMessage' is assigned a value but never used.","'useState' is defined but never used.","'useContext' is defined but never used.","'signer' is assigned a value but never used.","'connect' is assigned a value but never used.","'setcontect' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadNFT'. Either include it or remove the dependency array.","ArrayExpression",["139"],"'nftaddress' is defined but never used.","'route' is assigned a value but never used.","'sellPrice' is assigned a value but never used.","'setSells' is assigned a value but never used.",["140"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'connection' is assigned a value but never used.","'selecfile' is assigned a value but never used.","'files' is assigned a value but never used.","'setPrice' is assigned a value but never used.","'setSellerAndsell' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'listingPrice' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},"Update the dependencies array to be: [connection, loadNFT]",{"range":"145","text":"146"},"Update the dependencies array to be: [loadNFT]",{"range":"147","text":"148"},[542,554],"[connection, loadNFT]",[595,597],"[loadNFT]"]