[{"/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/index.js":"1","/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/App.js":"2","/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/reportWebVitals.js":"3","/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/config.js":"4","/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/context/web3.js":"5","/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/pages/Home.jsx":"6","/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/pages/Explore.jsx":"7","/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/pages/Collection.jsx":"8","/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/pages/Error.jsx":"9","/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/pages/Create.jsx":"10","/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/pages/Nft.jsx":"11","/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/components/Navbar.jsx":"12","/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/components/CardSales.jsx":"13","/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/components/Card.jsx":"14"},{"size":479,"mtime":1643303229717,"results":"15","hashOfConfig":"16"},{"size":3415,"mtime":1643441741845,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1643303229717,"results":"18","hashOfConfig":"16"},{"size":273,"mtime":1643692548083,"results":"19","hashOfConfig":"16"},{"size":82,"mtime":1643303229697,"results":"20","hashOfConfig":"16"},{"size":1247,"mtime":1643374965183,"results":"21","hashOfConfig":"16"},{"size":3061,"mtime":1643374932006,"results":"22","hashOfConfig":"16"},{"size":2156,"mtime":1643444245879,"results":"23","hashOfConfig":"16"},{"size":404,"mtime":1643303229717,"results":"24","hashOfConfig":"16"},{"size":4617,"mtime":1643692538111,"results":"25","hashOfConfig":"16"},{"size":4559,"mtime":1643692373289,"results":"26","hashOfConfig":"16"},{"size":3891,"mtime":1643374934182,"results":"27","hashOfConfig":"16"},{"size":526,"mtime":1643544996316,"results":"28","hashOfConfig":"16"},{"size":843,"mtime":1643545000712,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1lmqe2g",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"32"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/index.js",[],["65","66"],"/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/App.js",["67","68","69"],"import './style/App.css'\nimport React, { useEffect, useState } from 'react'\n// import axios from \"axios\"\n\n// import Web3Modal from \"web3modal\"\nimport {nftaddress, nftmarketplaceAddress } from './config'\nimport NFT from \"./contracts/NFT.json\"\nimport NFTmarketplace from \"./contracts/NFTmarketplace.json\"\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom'\nimport Home from './pages/Home'\nimport Explore from './pages/Explore'\nimport Navbar from './components/Navbar'\nimport Create from './pages/Create'\nimport Collection from './pages/Collection'\nimport Nft from './pages/Nft'\nimport Error from './pages/Error'\nimport {ethers} from 'ethers'\nimport {web3Provider} from './context/web3'\n\nfunction App() {\n\n  const [errorMessage, setErrorMessage] = useState(null)\n    const [defaltAccount, setdefaltAccount] = useState(null)\n    const [Balance, setBalance] = useState(null)\n  \n    const [provider, setProvider] = useState(null)\n    const [signer, setSigner] = useState(null)\n    const [nftContract, setNftContracr] = useState(null)\n    const [nftMarketContract, setNftMarkContract] = useState(null)\n    \n \n  const walletConnectionHandel = ()=>{\n   \n    \n    if(window.ethereum && window.ethereum.isMetaMask){\n      window.ethereum.request({method: 'eth_requestAccounts'}).then((result)=>{\n        accountChangeHandler(result[0])\n        console.log(\"hghgg\")\n\n      }).catch(error => {\n        setErrorMessage(error.message)\n      })\n\n    }else{\n      console.log(\"install metamask\");\n      setErrorMessage(\"Please install metamask\")\n    }\n  }\n  const accountChangeHandler = (newAccount)=>{\n    setdefaltAccount(newAccount)\n    console.log(defaltAccount);\n    getBalance(newAccount.toString())\n    updateEteres()\n\n  }\n  const getBalance = (address)=>{\n    window.ethereum.request({method: 'eth_getBalance', params: [address, 'latest']}).then((balance)=>{\n      setBalance(ethers.utils.formatEther(balance))\n    })\n  \n\n  }\n  \n  const updateEteres = ()=>{\n    let tempProvider = new ethers.providers.Web3Provider(window.ethereum);\n    let tempSigner = tempProvider.getSigner()\n    let tempNFTmarketContract = new ethers.Contract(nftmarketplaceAddress,NFTmarketplace.abi,tempSigner)\n    let tempNFTContract = new ethers.Contract(nftaddress,NFT.abi,tempSigner)\n \n    setProvider(tempProvider)\n    setSigner(tempSigner)\n    setNftMarkContract(tempNFTmarketContract)\n    setNftContracr(tempNFTContract)\n\n\n    console.log(provider);\n    console.log(nftContract);\n    console.log(nftMarketContract);\n   }\n \n  \n \n\n\n\n  return (\n    <Router>\n      <div className=\"App\" >\n        <web3Provider.Provider value={{connection: provider,signer:signer,Balance: Balance, nftContract:nftContract, nftMarketplaceContract:nftMarketContract}}>\n        <Navbar connet = {walletConnectionHandel} account={defaltAccount} />\n        <Routes>\n          <Route exact path=\"/\" element={<Home/>}>\n     \n          </Route>\n          <Route path=\"/explore\" element={<Explore/>}>\n        \n          </Route>\n          <Route path=\"/create\" element={<Create/>}>\n         \n          </Route>\n          <Route path=\"/mycollection\" element={<Collection/>}>\n         \n         </Route>\n\n         <Route path=\"/view/:view/:id\" element={<Nft/>}>\n         </Route>\n         \n         <Route path=\"*\" element={<Error/>}/>\n        </Routes>\n        </web3Provider.Provider>\n        \n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/reportWebVitals.js",[],"/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/config.js",[],"/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/context/web3.js",[],"/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/pages/Home.jsx",["70","71","72"],"import React, { useState, useContext, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport '../style/Home.css'\n\n\nfunction Home() {\n\n  return (\n    <div className=\"container\">\n     \n        <div className=\"\">\n        <div className=\"row feeld\">\n          <div className=\"col-md-6 co-sm-12\">\n            <div className=\"feeld-left\">\n              <div className=\"black\">\n                <div className=\"blankPhoto\">\n                  <img src=\"./w.jpg\" alt=\"\" />\n                </div>\n              </div>\n            </div>\n          </div>\n          <dic className=\"col-md-6\">\n            <div className=\"feeld-right\">\n              <div className=\"f\">\n                <div className=\"dis\">Mint your own NFT's on one click </div>\n                <div className=\"but\">\n                  <Link to=\"/create\">\n                    {' '}\n                    <button className=\"btn1 e\">Create</button>{' '}\n                  </Link>\n                  <Link to=\"/explore\">\n                    {' '}\n                    <button className=\"btn2 e\">Explore</button>\n                  </Link>\n                </div>\n              </div>\n            </div>\n          </dic>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Home\n","/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/pages/Explore.jsx",["73","74","75","76"],"import React, { useState, useEffect, useContext } from 'react'\nimport Card from '../components/Card'\nimport axios from 'axios'\nimport { ethers } from 'ethers'\nimport '../style/Card.css'\nimport { web3Provider } from '../context/web3'\n\nfunction Explore() {\n  const [nfts, setNfts] = useState([])\n  const [loading, setLoding] = useState('')\n  const {\n    connection,\n    signer,\n    nftMarketplaceContract,\n    nftContract,\n  } = useContext(web3Provider)\n\n  const [connect, setcontect] = useState(null)\n  useEffect(() => {\n\n    loadNFT()\n\n\n  }, [connection])\n\n\n  async function loadNFT() {\n    // let count =  await nftMarketplaceContract.marketItemCont()\n    // console.log(count.toNumber(),\"ggggggggggggggggggdddd\")\n\n    //   for(let j=1; j<=count ; j++){\n    //     const i = await nftMarketplaceContract.idMarketItem(j)\n    //     console.log(i,\"gggggggggggggggggg\")\n    //      let tockenid = i.tokenId\n    //       let id = tockenid.toNumber()\n\n    //       const tokenUri = await nftContract.tokenURI(id)\n    //       const meta = await axios.get(tokenUri)\n    //       let price = ethers.utils.formatUnits(i.price.toString(), 'ether')\n\n    //       let item = {\n    //         price,\n    //         tokenId: i.tokenId.toNumber(),\n    //         seller: i.seller,\n    //         owner: i.owner,\n    //         image: meta.data.image,\n    //         name: meta.data.name,\n    //         description: meta.data.description,\n    //       }\n    //       // return item\n    //       setNfts(nfts.push(item))\n    //       console.log(\"jj\")\n\n    //   console.log(nfts,\"dd\")\n\n\n    //  }\n\n\n\n\n    const data = await nftMarketplaceContract.fetchMarketItems()\n    const items = await Promise.all(\n      data.map(async (i) => {\n        let tockenid = i.tokenId\n        let id = tockenid.toNumber()\n        const tokenUri = await nftContract.tokenURI(id)\n        const meta = await axios.get(tokenUri)\n        let price = ethers.utils.formatUnits(i.price.toString(), 'ether')\n        let item = {\n          price,\n          tokenId: i.tokenId.toNumber(),\n          seller: i.seller,\n          owner: i.owner,\n          image: meta.data.image,\n          name: meta.data.name,\n          description: meta.data.description,\n        }\n\n        return item\n      }),\n    )\n    setNfts(items)\n    setLoding(\"loaded\")\n    console(\"gfs\", items)\n\n  }\n  if (loading === \"loaded\" && !nfts.length) return (<h1> noitem in market</h1>)\n\n  return (\n    <div className=\"news\">\n      <div className=\"collotion\">\n        <div className=\"container\">\n          <h3>NFT's</h3>\n          <div className=\"row\">\n            {\n              (connection == null) ? <div className='connectWalletWarring'>Please connect with wallet</div> : nfts.map((nfts, i) => (\n\n                <Card\n                  key={i}\n                  price={nfts.price}\n                  name={nfts.name}\n                  tokenId={nfts.tokenId}\n                  image={nfts.image}\n                />\n              ))\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Explore\n","/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/pages/Collection.jsx",["77","78","79","80","81","82","83"],"import React, { useState, useEffect, useContext } from 'react'\nimport Card from '../components/CardSales'\nimport axios from 'axios'\nimport { ethers } from 'ethers'\nimport { web3Provider } from '../context/web3'\nimport { nftaddress } from '../config'\nimport { useNavigate } from \"react-router-dom\"\n\n\nfunction Collection() {\n  const route = useNavigate();\n  const [sellPrice, setSells] = useState(null)\n  const [nfts, setNfts] = useState([])\n  const {\n    connection,\n    signer,\n    nftMarketplaceContract,\n    nftContract,\n  } = useContext(web3Provider)\n\n  useEffect(() => {\n    loadNFT()\n\n  }, [])\n\n  async function loadNFT() {\n    const data = await nftMarketplaceContract.fetchMyNFTs()\n    const items = await Promise.all(\n      data.map(async (i) => {\n        let tockenid = i.tokenId\n        let id = tockenid.toNumber()\n        const tokenUri = await nftContract.tokenURI(id)\n        const meta = await axios.get(tokenUri)\n        let price = ethers.utils.formatUnits(i.price.toString(), 'ether')\n        let item = {\n          price,\n          marketId: i.itemId.toNumber(),\n          tokenId: i.tokenId.toNumber(),\n          seller: i.seller,\n          owner: i.owner,\n          image: meta.data.image,\n          name: meta.data.name,\n          description: meta.data.description,\n        }\n        return item\n      }),\n    )\n    setNfts(items)\n  }\n\n\n  return (\n    <div className=\"news\">\n      <div className=\"collotion\">\n        <div className=\"container\">\n          <h3>My NFT Collection</h3>\n          <div className=\"row\">\n            {\n              (connection == null) ? <div className='connectWalletWarring'>Please connect with wallet</div> : (nfts.length == 0) ? <div className='connectWalletWarring'>You not owned any NFT's</div> : nfts.map((nfts, i) => (\n                <Card\n                  key={i}\n                  price={nfts.price}\n                  name={nfts.name}\n                  tokenId={nfts.tokenId}\n                  image={nfts.image}\n                  marketId={nfts.marketId}\n                />\n              ))\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Collection\n","/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/pages/Error.jsx",[],"/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/pages/Create.jsx",["84","85","86","87","88"],"/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/pages/Nft.jsx",["89"],"/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/components/Navbar.jsx",["90"],"import React, { useState, useContext } from 'react'\nimport \"../style/Navbar.css\"\nimport { Link, NavLink } from \"react-router-dom\"\nimport { web3Provider } from '../context/web3'\n\nfunction Navbar({ connet, account }) {\n\n    const {\n        connection,\n        Balance\n    } = useContext(web3Provider)\n\n\n    const [click, setclick] = useState(false)\n    const [clickdropdown, setclickdropdawn] = useState(false)\n    function handleClick() {\n        setclick(!click)\n    }\n    const dropdown = () => {\n        connet()\n        setclickdropdawn(!clickdropdown)\n\n    }\n\n    return (\n        <div className=\"bo\">\n\n            <div className=\"nav\">\n\n\n                <div className=\"Navbar\">\n                    <div className=\"log\">\n                        <img src=\"./NFT_Icon.png\" alt=\"\" />\n                    </div>\n                    <div className=\"\" className={click ? \"active navbarDetails\" : \"navbarDetails \"}>\n                        {/* <div className=\"serch\">\n                    <div className=\"inputSertch\">\n                        <input type=\"text\" name=\"\" placeholder=\"Search\" id=\"\" />\n                    </div>\n                    <div className=\"serchButton\">\n                    <i className=\"fas fa-search\"></i>\n                    </div>\n                </div> */}\n                        <ul className=\"link\">\n                            <li> <NavLink to=\"/\" className={({ isActive }) => (isActive ? 'active' : 'link')} activeStyle={{ color: 'red' }}>Home</NavLink></li>\n                            <li><NavLink to=\"/explore\" className={({ isActive }) => (isActive ? 'active' : 'link')}>Explore </NavLink></li>\n                            <li><NavLink to=\"/mycollection\" className={({ isActive }) => (isActive ? 'active' : 'link')}>My Collection </NavLink></li>\n\n                        </ul>\n                        <Link to=\"/create\" className=\"btn1\">Create</Link>\n\n\n                        <div class=\"dropdown\">\n                            {/* <button onclick=\"myFunction()\" class=\"dropbtn\">Dropdown</button> */}\n                            <button className=\"btn2 connect\" onClick={(connection == null) ? connet : dropdown} >{account ? account : \"Connect Wallet\"}</button>\n                            <div id=\"myDropdown\" class={clickdropdown ? \"dropdown-content show\" : \"dropdown-content \"}>\n                                <p>ETH : {Balance}</p>\n                                {/* <button>Disconnect</button> */}\n\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"menu\">\n\n                        <button className=\"btn2 connect ss\" onClick={connet}>{account ? account : \"Connect Wallet\"}>Connect Wallet</button>\n                        <i onClick={handleClick} class={click ? \"fas fa-times\" : \"fas fa-bars\"}></i>\n                    </div>\n\n                </div>\n            </div>\n            <div className={click ? \"side active\" : \"hide\"}>\n                <div className=\"menuside\">\n                    <ul className=\"linkside\">\n                        <li onClick={handleClick}> <NavLink to=\"/\" className={({ isActive }) => (isActive ? 'active' : 'link')} activeStyle={{ color: 'red' }}>Home</NavLink></li>\n                        <li onClick={handleClick}><NavLink to=\"/explore\" className={({ isActive }) => (isActive ? 'active' : 'link')}>Explore </NavLink></li>\n                        <li onClick={handleClick}><NavLink to=\"/mycollection\" className={({ isActive }) => (isActive ? 'active' : 'link')}>My Collection </NavLink></li>\n                        <li onClick={handleClick}> <Link to=\"/mint\" className=\"btn1\">Create</Link></li>\n                        {/* <li onClick={handleClick}> <button className=\"btn2 connect\">Connect Wallet</button></li> */}\n\n                    </ul>\n\n\n\n\n                </div>\n\n            </div>\n\n\n        </div>\n    )\n}\n\nexport default Navbar\n","/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/components/CardSales.jsx",["91"],"import React ,{useState} from 'react'\nimport {Link} from \"react-router-dom\"\nimport \"../style/Card.css\"\n\nfunction Card({image,tokenId,name}) {\n    \n  \n    return (\n        <div className=\" col-md-12 col-lg-4  \">\n            <div className=\"card\">\n            <Link to={`/view/my/${tokenId}` }> \n            <div className=\"card-innerbox\">\n                <img src={image} alt=\"\" />\n                <h3>{name} #{tokenId}</h3>\n            </div>\n            </Link>\n            </div>\n        </div>\n    )\n}\n\nexport default Card\n","/home/nisamdheen/sps/NFT_MARKETPLACE/client/src/components/Card.jsx",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":2,"column":17,"nodeType":"98","messageId":"99","endLine":2,"endColumn":26},{"ruleId":"96","severity":1,"message":"100","line":9,"column":50,"nodeType":"98","messageId":"99","endLine":9,"endColumn":54},{"ruleId":"96","severity":1,"message":"101","line":22,"column":10,"nodeType":"98","messageId":"99","endLine":22,"endColumn":22},{"ruleId":"96","severity":1,"message":"102","line":1,"column":17,"nodeType":"98","messageId":"99","endLine":1,"endColumn":25},{"ruleId":"96","severity":1,"message":"103","line":1,"column":27,"nodeType":"98","messageId":"99","endLine":1,"endColumn":37},{"ruleId":"96","severity":1,"message":"97","line":1,"column":39,"nodeType":"98","messageId":"99","endLine":1,"endColumn":48},{"ruleId":"96","severity":1,"message":"104","line":13,"column":5,"nodeType":"98","messageId":"99","endLine":13,"endColumn":11},{"ruleId":"96","severity":1,"message":"105","line":18,"column":10,"nodeType":"98","messageId":"99","endLine":18,"endColumn":17},{"ruleId":"96","severity":1,"message":"106","line":18,"column":19,"nodeType":"98","messageId":"99","endLine":18,"endColumn":29},{"ruleId":"107","severity":1,"message":"108","line":24,"column":6,"nodeType":"109","endLine":24,"endColumn":18,"suggestions":"110"},{"ruleId":"96","severity":1,"message":"111","line":6,"column":10,"nodeType":"98","messageId":"99","endLine":6,"endColumn":20},{"ruleId":"96","severity":1,"message":"112","line":11,"column":9,"nodeType":"98","messageId":"99","endLine":11,"endColumn":14},{"ruleId":"96","severity":1,"message":"113","line":12,"column":10,"nodeType":"98","messageId":"99","endLine":12,"endColumn":19},{"ruleId":"96","severity":1,"message":"114","line":12,"column":21,"nodeType":"98","messageId":"99","endLine":12,"endColumn":29},{"ruleId":"96","severity":1,"message":"104","line":16,"column":5,"nodeType":"98","messageId":"99","endLine":16,"endColumn":11},{"ruleId":"107","severity":1,"message":"108","line":24,"column":6,"nodeType":"109","endLine":24,"endColumn":8,"suggestions":"115"},{"ruleId":"116","severity":1,"message":"117","line":59,"column":124,"nodeType":"118","messageId":"119","endLine":59,"endColumn":126},{"ruleId":"96","severity":1,"message":"97","line":1,"column":35,"nodeType":"98","messageId":"99","endLine":1,"endColumn":44},{"ruleId":"96","severity":1,"message":"120","line":27,"column":10,"nodeType":"98","messageId":"99","endLine":27,"endColumn":20},{"ruleId":"96","severity":1,"message":"104","line":27,"column":22,"nodeType":"98","messageId":"99","endLine":27,"endColumn":28},{"ruleId":"96","severity":1,"message":"121","line":30,"column":10,"nodeType":"98","messageId":"99","endLine":30,"endColumn":19},{"ruleId":"96","severity":1,"message":"122","line":39,"column":13,"nodeType":"98","messageId":"99","endLine":39,"endColumn":18},{"ruleId":"116","severity":1,"message":"117","line":125,"column":23,"nodeType":"118","messageId":"119","endLine":125,"endColumn":25},{"ruleId":"123","severity":1,"message":"124","line":35,"column":39,"nodeType":"125","messageId":"126","endLine":35,"endColumn":100},{"ruleId":"96","severity":1,"message":"102","line":1,"column":16,"nodeType":"98","messageId":"99","endLine":1,"endColumn":24},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'errorMessage' is assigned a value but never used.","'useState' is defined but never used.","'useContext' is defined but never used.","'signer' is assigned a value but never used.","'connect' is assigned a value but never used.","'setcontect' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadNFT'. Either include it or remove the dependency array.","ArrayExpression",["129"],"'nftaddress' is defined but never used.","'route' is assigned a value but never used.","'sellPrice' is assigned a value but never used.","'setSells' is assigned a value but never used.",["130"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'connection' is assigned a value but never used.","'selecfile' is assigned a value but never used.","'files' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},"Update the dependencies array to be: [connection, loadNFT]",{"range":"135","text":"136"},"Update the dependencies array to be: [loadNFT]",{"range":"137","text":"138"},[542,554],"[connection, loadNFT]",[595,597],"[loadNFT]"]